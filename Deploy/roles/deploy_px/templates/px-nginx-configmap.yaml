apiVersion: v1
kind: ConfigMap
metadata:
  name: px-nginx-{{ release_name }}
  namespace: {{ namespace }}
  labels:
    app: px-{{ release_name }}
data:
  px-profi.conf: |
    upstream px-php {
        server 127.0.0.1:9000 fail_timeout=30s;
    }

    upstream warp.nearest {
        server warp-nginx-{{ release_name }} fail_timeout=30s;
    }

    map_hash_max_size 2048;
    map_hash_bucket_size 128;
    merge_slashes off;

    geo $regnum {
        ranges;
        default 0;
        include /etc/nginx/geoip/region.conf;
    }
    geo $country {
        ranges;
        default RU;
        include /etc/nginx/geoip/countries.conf;
    }
    map $regnum $geo_region {
        default msk;
        include /etc/nginx/geoip/city.conf;
    }

    map $http_upgrade $connection_upgrade {
           default upgrade;
           ''      close;
    }

    map $http_x_forwarded_proto $x_scheme {
        default 'http';
        'https' 'https';
    }

    map $uri $is_mainpage {
        default     0;
        /           1;
    }


    map $cookie_mobile_version$request_method $backend_path {
        default php;
        'yesGET' warp;
    }
    #proxy_cache_path /var/cache/nginx/proxy levels=1:2 inactive=7d max_size=2g keys_zone=ssipage:100m;
    ssi_value_length 640k;
    proxy_cache_path /var/cache/nginx/proxy levels= inactive=3d max_size=20g loader_files=1000 keys_zone=ssipage:500m;

    # make format compatible with balancers
    log_format  px_profi     '$status "$host" "$time_local" "$remote_addr" "$remote_user" "$request_time" $body_bytes_sent '
                             '"#" "#" "#" "#" "#" "#" '
                             '"#" "#" "#" "#" "#" "#" '
                             '"$cookie_uid" "#" "#" "$upstream_response_time" "$upstream_addr" "$cookie_serverid" "$http_request_id" '
                             'request:"$request_method $request_uri $server_protocol" x_cache:"$upstream_cache_status" ssi_request:"no" mobile_version="no" ';

    log_format  px_profi_ssi '$status "$host" "$time_local" "$remote_addr" "$remote_user" "$request_time" $body_bytes_sent '
                              '"#" "#" "#" "#" "#" "#" '
                              '"#" "#" "#" "#" "#" "#" '
                              '"$cookie_uid" "#" "#" "$upstream_response_time" "$upstream_addr" "$cookie_serverid" "$http_request_id" '
                              'request:"$request_method $uri$is_args$args $server_protocol" x_cache:"$upstream_cache_status" ssi_request:"yes" mobile_version="no" ';

    log_format eg_px_profi '$status "$host" "$time_local" "$remote_addr" "$remote_user" "$request_time" $body_bytes_sent '
    '"$request" "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$server_port" "$cookie_ri_uck" '
    '"$uid_got" "$uid_set" "$cookie_ri_oid" "$cookie_ri_sck" "$sent_http_content_type" "$http_accept_language" '
    '"$uid" "$cookie_egadmin" "$cookie_egback" "$cookie_mobile_version"';

    set_real_ip_from  10.0.0.0/8;
    set_real_ip_from  127.0.0.0/8;
    real_ip_header    X-Real-IP;

    server
    {
        listen 80;
        server_name profi.ru ~^(reg\.)?((?<city>[-a-z0-9]+)\.)?profi\.ru(?<domainend>.*)$;
        set $secure_condition "$cookie_need_secure$x_scheme";
        if ($secure_condition = "1http")
        {
            rewrite ^(.*) https://$host$1 permanent;
        }
        include /var/www/px-profi/sys/nginx/rewrites.conf;
        include /var/www/px-profi/sys/nginx/server.conf;
    }

    server
    {
        listen 8900;
        underscores_in_headers on;
        server_name profi.ru ~^(reg\.)?((?<city>[-a-z0-9]+)\.)?profi\.ru(?<domainend>.*)$;
        root /var/www/px-profi/htdocs;
        access_log /var/log/px/new/access-eg.log eg_px_profi;
        client_max_body_size 150m;
        large_client_header_buffers 4 64k;

        location /
        {
            if ($cookie_uid ~ "^[A-z0-9]{32}$") {
                set $uid $cookie_uid;
            }

            access_log /var/log/px/access.log px_profi;
            access_log /var/log/px/new/access-eg.log eg_px_profi;

            if ( !-f $request_filename) {
                rewrite .* /index.php last;
            }

            include /var/www/px-profi/sys/nginx/fastcgi.conf;

            fastcgi_param REQUEST_URI     $request_uri;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_cache_key $scheme$request_method$host$request_uri$is_args$args;
        }

        # Кеширование только на главной странице
        fastcgi_no_cache     $is_mainpage;
        fastcgi_cache_bypass $is_mainpage;
    }

    server
    {
        listen 443 ssl;

        ssl_certificate /var/www/px-profi/sys/nginx/ssl/ssl-bundle.crt;
        ssl_certificate_key /var/www/px-profi/sys/nginx/ssl/private.key;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

        location / {
            proxy_buffers 64 64k;
            proxy_buffer_size 128k;
            proxy_busy_buffers_size 256k;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Request-Id $http_request_id;
            proxy_set_header X-Forwarded-Proto $scheme;
            set $http_request_id $pid-$msec-$remote_addr-$remote_port;
            proxy_pass http://localhost;
            proxy_cache off;
            proxy_set_header Host $host;
            proxy_set_header Range "";
        }
    }

    fastcgi_cache_path /var/cache/nginx/fastcgi/     levels=1:2 keys_zone=PX_PROFI:100m max_size=2g inactive=7d use_temp_path=on;
    fastcgi_temp_path  /var/cache/nginx/fastcgi-tmp/ 1 2;

    server
    {
        server_name profi-www ~^www.profi.ru.*$;
        rewrite ^(.*) http://profi.ru$1 permanent;
    }

    server
    {
        server_name profi-online online.profi.ru.*;
        listen 80;
        location /socket.io
        {
            proxy_pass http://warp-nginx-{{ release_name }};
            proxy_redirect off;
            proxy_pass_request_headers      on;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }


    server
    {
        listen  80;
        server_name repetitors.info ~^kabinet\.((?<city>[-a-z0-9]+)\.)?repetitors\.info(?<domainend>.*)$;
        set $px_external "repetitor";
        include /var/www/px-profi/sys/nginx/rewrites_vr.conf;
        include /var/www/px-profi/sys/nginx/server.conf;
    }
